#!/usr/bin/python
#
# GeoIP2 Country/ASN/Organization lookup for Splunk
#
#
# Input:  src_ip dest_ip      
# Output: src_country dest_country src_asn src_as src_org dest_asn dest_as dest_org
#

import csv
import os
import sys

import geoip2.database

def db_path(dataset):
    return "{0}/../data/maxmind/GeoLite2-{1}.mmdb".format(
    os.path.dirname(sys.argv[0]), dataset)


asn_db = geoip2.database.Reader(db_path("ASN"))
country_db = geoip2.database.Reader(db_path("Country"))

csv_in = csv.reader(sys.stdin)
csv_out = csv.writer(sys.stdout)

# The first line is always the header.  Pick it apart and figure out
# where the fields we want live.

header = csv_in.next()
field_index = dict((name, pos) for pos, name in enumerate(header))

index_src_ip = field_index["src_ip"]
index_src_as = field_index["src_as"]
index_src_asn = field_index["src_asn"]
index_src_org = field_index["src_org"]
index_src_country = field_index["src_country"]

index_dest_ip = field_index["dest_ip"]
index_dest_as = field_index["dest_as"]
index_dest_asn = field_index["dest_asn"]
index_dest_org = field_index["dest_org"]
index_dest_country = field_index["dest_country"]


# Write the file, header line first.

csv_out.writerow(header)

for line in csv_in:

    try:

	src_ip = line[index_src_ip]

        asn_response = asn_db.asn(src_ip)
        asn = asn_response.autonomous_system_number
        line[index_src_as] = "AS{0}".format(asn)
        line[index_src_asn] = asn
        try:
            line[index_src_org] = asn_response.autonomous_system_organization.encode("ascii", "replace")
        except AttributeError:
            pass

        country_response = country_db.country(src_ip)
        line[index_src_country] = country_response.country.iso_code

	dest_ip = line[index_dest_ip]

        asn_response = asn_db.asn(dest_ip)
        asn = asn_response.autonomous_system_number
        line[index_dest_as] = "AS{0}".format(asn)
        line[index_dest_asn] = asn
        try:
            line[index_dest_org] = asn_response.autonomous_system_organization.encode("ascii", "replace")
        except AttributeError:
            pass

        country_response = country_db.country(dest_ip)
        line[index_dest_country] = country_response.country.iso_code


    except (KeyError, geoip2.errors.AddressNotFoundError):
        # Not there, don't care.
        pass

    # Write the row back no matter how it turned out.
    csv_out.writerow(line)
